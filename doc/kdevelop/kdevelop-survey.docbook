<chapter id="kdevelop-survey">

<chapterinfo>
  <authorgroup>
    <author><firstname>Bernd</firstname><surname>Pol</surname></author>
    <!-- ROLES_OF_TRANSLATORS -->
  </authorgroup>
</chapterinfo>

<title>Overview of &kdevelop; Features</title>

<indexterm zone="kdevelop-survey">
  <primary>&kdevelop;</primary>
  <secondary>survey</secondary></indexterm>
<indexterm zone="kdevelop-survey">
  <primary>overall view</primary></indexterm>
<indexterm zone="kdevelop-survey">
  <primary>survey</primary></indexterm>

<para>
&kdevelop; integrates a lot of tools, scripts, and templates in a common user interface. Basically it consists of

<itemizedlist>
  <listitem><para>
  several <link  linkend="uimodes-survey">user interface modes</link> from which you can select the look and feel of the workspace,
  </para></listitem>
  <listitem><para>
  an <link linkend="applicationwizard">&appwizard;</link> which aids you in setting up a new project,
  </para></listitem>
  <listitem><para>
  several <link linkend="makesystems">project management systems</link> which aid in building and managing your project,
  </para></listitem>
  <listitem><para>
  some <link linkend="editing">editing tools</link> to easily work on your program texts
  </para></listitem>
  <listitem><para>
  various <link linkend="file-browsers">file browsers</link> providing you different views on your file system,
  </para></listitem>
  <listitem><para>
  various <link linkend="class-browsers">class browsers</link> to aid you in maintaining the classes and their relationships of your object-oriented programming project,
  </para></listitem>
  <listitem><para>
  a <link linkend="debugger">debugger interface</link> to find and remove program errors from within &kdevelop;, and
  </para></listitem>
  <listitem><para>
  several <link linkend="plugin-tools">plugin tools</link>, extensible modules which can be loaded at runtime and on demand.  This allows you to only turn on those features you really need.
  </para></listitem>
  <listitem><para>
  a set of other diagnosis, documentation, and optimization helper tools.
  </para></listitem>
</itemizedlist>
</para>

<note>
  <para>
  In fact there are three &kdevelop;-based applications:
  </para>
  <itemizedlist>
    <listitem><para>The &kdevelop; IDE &mdash; this is the place where you will usually work.</para></listitem>
    <listitem><para>The stand-alone &kdevelop; Assistant documentation browser &mdash; isolates all the powerful documentation facilities of the &kdevelop; IDE in a separate tool. This comes in handy when you want to look up some programming documentation but do not want to start the full IDE.</para></listitem>
    <listitem><para>The &kdevelop; Designer &mdash; enhances the &Qt; User Interface Designer by &kde; specific elements and integrates nicely in the &kdevelop; IDE.</para></listitem>
  </itemizedlist>
</note>


<sect1 id="uimodes-survey">
<title>Available User Interface Modes</title>

<indexterm zone="uimodes-survey">
  <primary>&kdevelop;</primary>
  <secondary>user interface modes</secondary></indexterm>
<indexterm zone="uimodes-survey">
  <primary>user interface</primary>
  <secondary>&kdevelop; modes</secondary></indexterm>
<indexterm zone="uimodes-survey">
  <primary>UI modes</primary></indexterm>
<indexterm zone="uimodes-survey">
  <primary>Child Frame Windows</primary></indexterm>
<indexterm zone="uimodes-survey">
  <primary>Tabbed Pages</primary></indexterm>
<indexterm zone="uimodes-survey">
  <primary>Toplevel Windows</primary></indexterm>
<indexterm zone="uimodes-survey">
  <primary>IDEAl</primary></indexterm>

<para>
&kdevelop; offers developers four separate user interface modes (click on the mode name to view an example):
<itemizedlist>
  <listitem><para><link linkend="ideal-desc">IDEAl</link></para>
  <para>
  This is a novel user interface approach optimizing both work space and intuitive handling of the tools.
  </para>
  <itemizedlist>
    <listitem><para>
    All tool views are docked in a tabbar fashion around the mainframe area. They are grouped left, bottom, and right according to the services provided.
    </para></listitem>
    <listitem><para>
    Editor and browser views will be stacked in a big sized tabbed window inmidst the mainframe area.
    </para></listitem>
  </itemizedlist>
  </listitem>

  <listitem>
  <para><link linkend="mdi-desc">Child Frame Windows</link></para>
  <itemizedlist>
    <listitem><para>All tool views are initially docked to the mainframe.</para></listitem>
    <listitem><para>Editor and browser views will live like toplevel windows within a view area of the mainframe.</para></listitem>
  </itemizedlist>
  </listitem>

  <listitem>
  <para><link linkend="tabbed-desc">Tabbed Pages</link></para>
  <itemizedlist>
    <listitem><para>
    All tool views are initially docked to the mainframe.
    </para></listitem>
    <listitem><para>
    Editor and browser views will be stacked in a tabbed window.
    </para></listitem>
  </itemizedlist>
  </listitem>

  <listitem>
  <para><link linkend="toplevel-desc">Toplevel Windows</link></para>
  <itemizedlist>
    <listitem><para>
    All editor, browser, and tool views will be toplevel windows directly on the desktop.
    </para></listitem>
    <listitem><para>
    The main widget only contains the menu, toolbars, and statusbar.
    </para></listitem>
  </itemizedlist>
  </listitem>

</itemizedlist>
</para>

<sect2 id="uimodes-switch">
<title>How to Switch User Interface Modes</title>

<indexterm zone="uimodes-switch">
  <primary>user interface</primary>
  <secondary>switch modes</secondary></indexterm>
<indexterm zone="uimodes-switch">
  <primary>switch UI modes</primary></indexterm>

<para>
To switch the user interface mode select <menuchoice> <guimenu>Settings</guimenu> <guimenuitem>Configure KDevelop...</guimenuitem> </menuchoice> from the menus. The <guilabel>Customize KDevelop</guilabel> dialog will pop up, where you have to select <guilabel>User Interface</guilabel> in the left hand tree. This will display the settings page shown below.
</para>

<screenshot>
  <mediaobject>
    <imageobject>
      <imagedata fileref="select-user-interface.png" format="PNG"/>
    </imageobject>
    <caption><para>
    Select a user interface mode
    </para></caption>
  </mediaobject>
</screenshot>

<para>
(Older &kdevelop; versions provide the top mode selection section only.)
</para>

<para>
In the <guilabel>Major User-Interface Mode</guilabel> section select the radio button of the user interface mode you want to work in.
</para>
<para>
Dependent on the user interface mode you selected, other configuration sections will become available where you can taylor more details of the look and feel to your preferences. See the <link linkend="setup-ui">Selecting the User Interface</link> chapter for more detail.
</para>

<note><para>
Do not forget to restart &kdevelop; in order to let your selections take effect.
</para></note>

</sect2> <!-- uimodes-switch -->

<sect2 id="maximize-workspace">
<title>How to Maximize the Work Space Area</title>

<indexterm zone="maximize-workspace">
  <primary>&kdevelop;</primary>
  <secondary>work space</secondary></indexterm>
<indexterm zone="maximize-workspace">
  <primary>&kdevelop;</primary>
  <secondary>maximize work space</secondary></indexterm>
<indexterm zone="maximize-workspace">
  <primary>user interface</primary>
  <secondary>work space</secondary></indexterm>
<indexterm zone="maximize-workspace">
  <primary>user interface</primary>
  <secondary>menubar</secondary></indexterm>
<indexterm zone="maximize-workspace">
  <primary>user interface</primary>
  <secondary>full screen mode</secondary></indexterm>
<indexterm zone="maximize-workspace">
  <primary>full screen mode</primary></indexterm>
<indexterm zone="maximize-workspace">
  <primary>menubar</primary>
  <secondary>hide/unhide</secondary></indexterm>
<indexterm zone="maximize-workspace">
  <primary>hide menubar</primary></indexterm>
<indexterm zone="maximize-workspace">
  <primary>unhide menubar</primary></indexterm>

<para>
To maximize space, there is a full-screen window mode available which expands the mainframe area to the screen borders. Additional space can be reclaimed by hiding the menubar. And you can of course hide any toolbar as usual in <application>KDE</application> applications.
</para>

<variablelist>
<varlistentry>
<term>Full Screen Mode</term>
<listitem>
<para>
To switch to or from full screen mode select <menuchoice>
<guimenu>View</guimenu> <guimenuitem>Full-Screen Mode</guimenuitem>
</menuchoice> from the menus or press
<keycombo>&Ctrl;&Shift;<keycap>F</keycap> </keycombo>. There is also a
<guiicon>Full-Screen Mode</guiicon> icon in the <guilabel>Browse
Toolbar</guilabel> available.</para>
</listitem>
</varlistentry>

<varlistentry>
<term>Hide/Unhide the Menubar</term>
<listitem>
<para>
To <emphasis>hide</emphasis> the menubar select <menuchoice> <guimenu>Settings</guimenu> <guimenuitem>Show Menubar</guimenuitem> </menuchoice> from the menus or press <keycombo>&Ctrl;<keycap>M</keycap> </keycombo>. You may also include a <guiicon>Show Menubar</guiicon> icon in a suiting toolbar, &eg; the <guilabel>Browse Toolbar</guilabel> for that purpose. To <emphasis>unhide</emphasis> the menubar you must press <keycombo> &Ctrl;<keycap>M</keycap> </keycombo> or use the <guiicon>Show Menubar</guiicon> icon if available.
</para>
</listitem>
</varlistentry>
</variablelist>

</sect2> <!-- maximize-workspace -->

</sect1> <!-- uimodes-survey -->

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<sect1 id="ui-elements">
<title>Elements of the User Interface</title>

<para>
(... to be written ...)
</para>

<sect2 id="ui-elements-workarea">
<title>The Workarea</title>

<para>
(... to be written ...)
</para>
</sect2> <!-- ui-elements-workarea -->

<sect2 id="ui-elements-titlebar">
<title>The &kdevelop; Titlebar</title>

<para>
(... to be written ...)
</para>
</sect2> <!-- ui-elements-titlebar -->

<sect2 id="ui-elements-statusbar">
<title>The &kdevelop; Statusbar</title>

<para>
(... to be written ...)
</para>
</sect2> <!-- ui-elements-statusbar -->

<sect2 id="ui-elements-menubar">
<title>The menubar</title>

<para>
(... to be written ...)
</para>
</sect2> <!-- ui-elements-menubar -->

<sect2 id="ui-elements-toolbars">
<title>The Toolbars</title>

<para>
(... to be written ...)
</para>
</sect2> <!-- ui-elements-toolbars -->

<sect2 id="ui-elements-treetoolviews">
<title>The Tree Tool Views</title>

<para>
(... to be written ...)
</para>
</sect2> <!-- ui-elements-treetoolviews -->

<sect2 id="ui-elements-outputtoolviews">
<title>The Output Tool Views</title>

<para>
(... to be written ...)
</para>
</sect2> <!-- ui-elements-outputtoolviews -->

</sect1> <!-- ui-elements -->

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<sect1 id="makesystems">
<title>Project Management Systems</title>

<indexterm zone="makesystems">
  <primary>project management</primary></indexterm>

<para>
Globally, a project will rely on some form of project management system.  &kdevelop; offers four <emphasis>project management systems</emphasis> the programmer can select from when creating a new project.

<itemizedlist>
  <listitem><para>
  <link linkend="automake-project">Automake projects</link> use the &GNU; standard development tools.
  </para></listitem>
  <listitem><para>
  <link linkend="qmake-project">QMake projects</link> use the trolltech QMake project manager.
  </para></listitem>
  <listitem><para>
  <link linkend="ant-project">ANT projects</link> use the Apache ANT project manager for &Java; development.
  </para></listitem>
  <listitem><para>
  <link linkend="custom-project">Custom projects</link> require you to maintain your own <filename>Makefiles</filename>.
  </para></listitem>
</itemizedlist>
</para>

<sect2 id="automake-project">
<title>Automake Projects</title>

<indexterm zone="automake-project">
  <primary>projects</primary>
  <secondary>automake</secondary></indexterm>
<indexterm zone="automake-project">
  <primary>automake</primary>
  <secondary>projects</secondary></indexterm>

<para>
Projects created with &kdevelop;'s &automanag; make it very easy for developers to use the &GNU; standard development tools. They provide
<itemizedlist>
  <listitem><para>
  a better way of <filename>Makefile</filename> generation and
  </para></listitem>
  <listitem><para>
  a good and safe way for fast adaption towards different systems by autoconf-generated <filename>configure</filename> scripts.
  </para></listitem>
</itemizedlist>
</para>
</sect2> <!-- automake-project -->

<sect2 id="qmake-project">
<title>QMake Projects</title>

<indexterm zone="qmake-project">
  <primary>projects</primary>
  <secondary>qmake</secondary></indexterm>
<indexterm zone="qmake-project">
  <primary>qmake</primary>
  <secondary>projects</secondary></indexterm>

<para>
For developers who enjoy the flexibility and feel of &Qt;'s qmake system, &kdevelop; offers the ability to handle qmake based projects (.pro files) within the &GUI;.
</para>
<para>
For more information on the QMake project manager see the <quote>qmake User Guide</quote> which should be included in your distribution or have a look at the <ulink url="http://doc.trolltech.com/">TROLLTECH Documentation</ulink> home page where you may find the QMake documentation of your <quote>Qt C++ GUI Application Development Toolkit</quote> version.
</para>
</sect2> <!-- qmake-project -->

<sect2 id="ant-project">
<title>ANT Projects (&Java; Projects)</title>

<indexterm zone="ant-project">
  <primary>projects</primary>
  <secondary>ant</secondary></indexterm>
<indexterm zone="ant-project">
  <primary>ant</primary>
  <secondary>projects</secondary></indexterm>
<indexterm zone="ant-project">
  <primary>projects</primary>
  <secondary>Java</secondary></indexterm>
<indexterm zone="ant-project">
  <primary>Java</primary>
  <secondary>projects</secondary></indexterm>
<indexterm zone="ant-project">
  <primary>development</primary>
  <secondary>Java</secondary></indexterm>

<para>
&Java; developers may want to use the Apache ANT project manager for their projects. To set up a new Ant project in &kdevelop; select <menuchoice><guimenu>Project</guimenu>
<guimenuitem>New Project...</guimenuitem>
<guimenuitem>Java</guimenuitem>
<guimenuitem>Ant Project</guimenuitem>
<guimenuitem>Application</guimenuitem></menuchoice>.
</para>
<para>
For more information see <ulink url="http://ant.apache.org/">The Apache Ant Project</ulink> home page.
</para>
</sect2> <!-- ant-project -->

<sect2 id="custom-project">
<title>Custom Projects</title>

<indexterm zone="custom-project">
  <primary>projects</primary>
  <secondary>custom</secondary></indexterm>
<indexterm zone="custom-project">
  <primary>custom projects</primary></indexterm>
<indexterm zone="custom-project">
  <primary>Makefile</primary>
  <secondary>custom projects</secondary></indexterm>

<para>
If you prefer to maintain your own <filename>Makefiles</filename> for your project you may use the custom project option of &kdevelop;. This may be feasible in unusually structured projects or if you want to retain full control over the <command>make</command> process.
</para>
<para>
Yet, if you do not <emphasis>really need</emphasis> the extra flexibility and control of the custom project manager you should consider &automanag; or one of the other project managers, because they considerably ease the program building and distribution processes.
</para>
</sect2> <!-- custom-project -->

<sect2 id="makesystems-distribution">
<title>How to Distribute Your Application</title>

<indexterm zone="makesystems-distribution">
  <primary>distribution</primary></indexterm>
<indexterm zone="makesystems-distribution">
  <primary>application</primary>
  <secondary>distribution</secondary></indexterm>
<indexterm zone="makesystems-distribution">
  <primary>binary packages</primary></indexterm>

<para>
The distribution of your applications does not require the end-user to have anything different installed other than
<itemizedlist>
  <listitem><para>an appropriate compiler,</para></listitem>
  <listitem><para>a linker, and</para></listitem>
  <listitem><para>the appropriate development libraries,</para></listitem>
</itemizedlist>
</para>
<para>
which at least for C++ applications is most often the case. But you can as well distribute <emphasis>binary packages</emphasis> of your application.
<!-- ### more detail on binary construction needed somewhere -->
In either way, the end-user of your product does not need &kdevelop; installed.
</para>
<para>
For giving away your sources, we advise to include the <emphasis>project file</emphasis> of &kdevelop; as well. This makes it very easy for other developers&mdash;if they use &kdevelop;&mdash;to work with your sources.
</para>
<para>
For projects where <emphasis>several developers</emphasis>, maybe working on different places, are involved, this should be the case anyway. So you can ensure consistency of the <filename>Makefiles</filename> to not run into trouble.
</para>
<para>
Especially on multi language applications, <emphasis>translators</emphasis> won't actually work with the source code, except in cases that require correction for enabling translation support.
</para>

</sect2> <!-- makesystems-distribution -->

</sect1> <!-- makesystems -->

</chapter> <!-- kdevelop-survey -->
